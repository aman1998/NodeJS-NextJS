{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/myprojects/test/client/pages/index.js\";\nimport { useEffect, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { Breadcrumb, Spin } from 'antd';\nimport axios from '../axios/axios';\nimport List from '../components/list/list';\nimport styles from './Home.module.css';\nimport PageTemplate from '../components/template/pageTemplate';\n\nconst Home = ({\n  orders: serverOrders\n}) => {\n  const {\n    0: orders,\n    1: setOrders\n  } = useState(serverOrders);\n  const {\n    0: type,\n    1: setType\n  } = useState('');\n  const {\n    0: searchClient,\n    1: setSearchClient\n  } = useState('');\n  const {\n    0: status,\n    1: setStatus\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false);\n  const {\n    0: failed,\n    1: setFailed\n  } = useState(false);\n  useEffect(() => {\n    let url = `orders/`;\n    setLoading(true);\n\n    if (type && status === '') {\n      url = `/orders/?checkType=${type}`;\n    }\n\n    if (status && type === '') {\n      url = `/orders/?checkStatus=${status}`;\n    }\n\n    if (type && status) {\n      url = `/orders/?checkStatus=${status}&checkType=${type}`;\n    } // if(searchWorker && searchClient === '') {\n    //   url = `orders/?searchWorker=${searchWorker}&checkStatus=${status}&checkType=${type}`\n    // }\n    // if(searchClient && searchWorker === '') {\n    //   url = `orders/?searchClient=${searchClient}&checkStatus=${status}&checkType=${type}`\n    // }\n    // if(searchClient && searchWorker) {\n    //   url = `orders/?searchClient=${searchClient}&searchWorker=${searchWorker}&checkStatus=${status}&checkType=${type}`\n    // }\n\n\n    axios.get(url).then(({\n      data\n    }) => {\n      setOrders(data);\n      setLoading(false);\n      setSuccess(true);\n    }).catch(e => {\n      setLoading(false);\n      setFailed(true);\n    });\n  }, [status, type, searchClient]);\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    setType: setType,\n    setStatus: setStatus,\n    setSearchClient: setSearchClient,\n    children: loading ? /*#__PURE__*/_jsxDEV(Spin, {\n      className: styles.loader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : success ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n        style: {\n          margin: '16px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          children: \"List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        orders: orders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;\nexport async function getStaticProps(context) {\n  let orders;\n  await axios.get('/orders').then(({\n    data\n  }) => {\n    orders = data;\n  });\n  return {\n    props: {\n      orders\n    }\n  };\n}","map":{"version":3,"sources":["/Users/user/Desktop/myprojects/test/client/pages/index.js"],"names":["useEffect","useState","Breadcrumb","Spin","axios","List","styles","PageTemplate","Home","orders","serverOrders","setOrders","type","setType","searchClient","setSearchClient","status","setStatus","loading","setLoading","success","setSuccess","failed","setFailed","url","get","then","data","catch","e","loader","margin","getStaticProps","context","props"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react'\nimport 'antd/dist/antd.css'\nimport { Breadcrumb, Spin} from 'antd'\nimport axios from '../axios/axios'\nimport List from '../components/list/list'\nimport styles from './Home.module.css'\nimport PageTemplate from '../components/template/pageTemplate'\n\nconst Home = ({orders: serverOrders}) => {\n  const [orders, setOrders] = useState(serverOrders)\n  const [type, setType] = useState('')\n  const [searchClient, setSearchClient] = useState('')\n  const [status, setStatus] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const [failed, setFailed] = useState(false)\n\n  useEffect(() => {\n    let url = `orders/`;\n    setLoading(true)\n    if(type && status === '') {\n      url = `/orders/?checkType=${type}`\n    }\n    if(status && type === '') {\n      url = `/orders/?checkStatus=${status}`\n    }\n    if(type && status) {\n      url = `/orders/?checkStatus=${status}&checkType=${type}`\n    }\n    // if(searchWorker && searchClient === '') {\n    //   url = `orders/?searchWorker=${searchWorker}&checkStatus=${status}&checkType=${type}`\n    // }\n    // if(searchClient && searchWorker === '') {\n    //   url = `orders/?searchClient=${searchClient}&checkStatus=${status}&checkType=${type}`\n    // }\n    // if(searchClient && searchWorker) {\n    //   url = `orders/?searchClient=${searchClient}&searchWorker=${searchWorker}&checkStatus=${status}&checkType=${type}`\n    // }\n    axios.get(url)\n    .then (({data}) => {\n      setOrders(data)\n      setLoading(false)\n      setSuccess(true)\n    })\n    .catch(e => {\n      setLoading(false)\n      setFailed(true)\n    })\n  }, [status, type, searchClient])\n\n  return (\n    <PageTemplate \n      setType={setType}\n      setStatus={setStatus}\n      setSearchClient={setSearchClient}\n      >\n      {loading ? \n        <Spin className={styles.loader}/> :\n        success ?\n        <>\n        <Breadcrumb style={{ margin: '16px 0' }}>\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\n          <Breadcrumb.Item>List</Breadcrumb.Item>\n        </Breadcrumb>\n        <List orders={orders}/> \n        </> : <div>error</div> \n      }\n    </PageTemplate>\n  )\n}\n\nexport default Home\n\nexport async function getStaticProps(context) {\n  let orders;\n  await axios.get('/orders')\n      .then (({data}) => {\n        orders = data\n      })\n  return {\n    props: {orders}\n  }\n}"]},"metadata":{},"sourceType":"module"}