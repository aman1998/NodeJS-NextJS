{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/myprojects/test/client/components/layout/header.js\";\nimport 'antd/dist/antd.css';\nimport { Layout, Button, Modal, Spin, Input, Select } from 'antd';\nimport { useState } from 'react';\nimport { PlusOutlined, SettingFilled, UserOutlined } from '@ant-design/icons';\nimport axios from '../../axios/axios';\nimport styles from './styles.module.css';\nconst {\n  Header\n} = Layout;\nconst {\n  Option\n} = Select;\n\nconst HeaderComponent = ({\n  setOrder\n}) => {\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false);\n  const {\n    0: failed,\n    1: setFailed\n  } = useState(false);\n  const {\n    0: nameClient,\n    1: setNameClient\n  } = useState('');\n  const {\n    0: status,\n    1: setStatus\n  } = useState('');\n  const {\n    0: type,\n    1: setType\n  } = useState('');\n  const {\n    0: validation,\n    1: setValidation\n  } = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    console.log(nameClient, status, type);\n\n    if (nameClient, status, type) {\n      setLoading(loading);\n      axios.post('order', {\n        nameClient,\n        status,\n        type\n      }).then(() => {\n        setLoading(false);\n        setSuccess(true);\n        setOrder(true);\n      }).catch(() => {\n        setLoading(false);\n        setFailed(true);\n      });\n    } else {\n      setValidation(true);\n    }\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    setLoading(false);\n    setSuccess(false);\n    setFailed(false);\n    setValidation(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Header, {\n    className: styles.header,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.logo,\n      children: \"Axel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      block: true,\n      ghost: true,\n      icon: /*#__PURE__*/_jsxDEV(SettingFilled, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 47\n      }, this),\n      className: styles.btn,\n      children: \"Administration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      block: true,\n      ghost: true,\n      icon: /*#__PURE__*/_jsxDEV(SettingFilled, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 47\n      }, this),\n      className: styles.btn,\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 38\n      }, this),\n      onClick: showModal,\n      children: \"Create order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Add client\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: loading ? /*#__PURE__*/_jsxDEV(Spin, {\n        className: styles.loader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this) : success ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this) : failed ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => setNameClient(e.target.value),\n          placeholder: \"name\",\n          prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"Status\",\n          style: {\n            width: 120\n          },\n          onChange: value => setStatus(value),\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"done\",\n            children: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"progress\",\n            children: \"progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"Type\",\n          style: {\n            width: 120\n          },\n          onChange: value => setType(value),\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"cash\",\n            children: \"cash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"card\",\n            children: \"card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), validation ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this) : '']\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n};\n\nexport default HeaderComponent;","map":{"version":3,"sources":["/Users/user/Desktop/myprojects/test/client/components/layout/header.js"],"names":["Layout","Button","Modal","Spin","Input","Select","useState","PlusOutlined","SettingFilled","UserOutlined","axios","styles","Header","Option","HeaderComponent","setOrder","isModalVisible","setIsModalVisible","loading","setLoading","success","setSuccess","failed","setFailed","nameClient","setNameClient","status","setStatus","type","setType","validation","setValidation","showModal","handleOk","console","log","post","then","catch","handleCancel","header","logo","btn","loader","e","target","value","width"],"mappings":"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","sourcesContent":["import 'antd/dist/antd.css'\nimport { Layout, Button, Modal, Spin, Input, Select  } from 'antd'\nimport {useState} from 'react'\nimport { PlusOutlined, SettingFilled, UserOutlined } from '@ant-design/icons'\nimport axios from '../../axios/axios'\nimport styles from './styles.module.css'\n\nconst { Header } = Layout;\nconst { Option } = Select;\n\nconst HeaderComponent = ({setOrder}) => {\n  const [isModalVisible, setIsModalVisible] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const [failed, setFailed] = useState(false)\n  const [nameClient, setNameClient] = useState('')\n  const [status, setStatus] = useState('')\n  const [type, setType] = useState('')\n  const [validation, setValidation] = useState(false)\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    console.log(nameClient, status, type)\n    if(nameClient, status, type) {\n      setLoading(loading)\n      axios.post('order', {nameClient, status, type})\n      .then(() => {\n        setLoading(false)\n        setSuccess(true)\n        setOrder(true)\n      })\n      .catch(() => {\n        setLoading(false)\n        setFailed(true)\n      })\n    }\n    else {\n      setValidation(true)\n    }\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    setLoading(false)\n    setSuccess(false)\n    setFailed(false)\n    setValidation(false)\n  };\n\n  return (\n      <Header className={styles.header}>\n        <div className={styles.logo}>Axel</div>\n        <Button type=\"link\" block ghost icon={<SettingFilled />} className={styles.btn}>\n          Administration\n        </Button>\n        <Button type=\"link\" block ghost icon={<SettingFilled />} className={styles.btn}>\n          Settings\n        </Button>\n        <Button type=\"primary\" icon={<PlusOutlined />} onClick={showModal}>\n          Create order\n        </Button>\n        <Modal title=\"Add client\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n        {loading ? \n        <Spin className={styles.loader}/> : \n        success ? \n        <div>success</div> : \n        failed ? <div>error</div> :\n          <>\n          <Input \n            onChange={(e) => setNameClient(e.target.value)}\n            placeholder=\"name\" \n            prefix={<UserOutlined \n            />} \n          />\n          <Select \n            defaultValue=\"Status\" \n            style={{ width: 120 }} \n            onChange={(value) => setStatus(value)} >\n            <Option value=\"done\">done</Option>\n            <Option value=\"progress\">progress</Option>\n          </Select>\n          <Select \n            defaultValue=\"Type\" \n            style={{ width: 120 }} \n            onChange={(value) => setType(value)} >\n            <Option value=\"cash\">cash</Option>\n            <Option value=\"card\">card</Option>\n          </Select>\n          {validation ? <div>Заполните данные</div> : ''}\n          </>\n      }\n        </Modal>\n        {/* <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}></Modal */}\n      </Header>\n      \n  )\n}\n\nexport default HeaderComponent"]},"metadata":{},"sourceType":"module"}